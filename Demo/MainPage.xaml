<?xml version="1.0" encoding="utf-8" ?>
<ContentPage x:Class="App.MainPage"
             xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:app="clr-namespace:App.ViewModels;assembly=App"
             xmlns:stateButton="clr-namespace:StateButton;assembly=StateButton"
             BackgroundColor="White">
    <ContentPage.BindingContext>
        <app:TestViewModel />
    </ContentPage.BindingContext>
    <ScrollView>
        <StackLayout Padding="20,10">
            <Button Clicked="BtnNotInScrollView_Clicked" Text="Test button not in scroll view" />
            <Button Clicked="Button_Clicked" Text="Examples" />

            <!-- Events -->
            <Label FontSize="Large"
                   Text="Events"
                   TextColor="Black" />
            <Label FontSize="Medium"
                   Text="Clicked"
                   TextColor="Black" />

            <stateButton:StateButton Padding="20,10"
                                     AutomationProperties.HelpText="This is some help text"
                                     AutomationProperties.IsInAccessibleTree="True"
                                     AutomationProperties.Name="Test Accessibility"
                                     BackgroundColor="Red"
                                     Clicked="StateButton_OnClicked"
                                     HorizontalOptions="Center"
                                     Stroke="#C49B33"
                                     StrokeThickness="4">
                <stateButton:StateButton.StrokeShape>
                    <RoundRectangle CornerRadius="10" />
                </stateButton:StateButton.StrokeShape>
                <stateButton:StateButton.Triggers>
                    <Trigger TargetType="stateButton:StateButton" Property="State" Value="Pressed">
                        <Setter Property="BackgroundColor" Value="LightGray" />
                    </Trigger>
                </stateButton:StateButton.Triggers>
                <Label Text="Test" TextColor="White">
                    <Label.Triggers>
                        <DataTrigger Binding="{Binding Source={RelativeSource AncestorType={x:Type stateButton:StateButton}}, Path=State}"
                                     TargetType="Label"
                                     Value="Pressed">
                            <Setter Property="TextColor" Value="Blue" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </stateButton:StateButton>

            <Label FontSize="Medium"
                   Text="Pressed"
                   TextColor="Black" />
            <stateButton:StateButton Padding="20,10"
                                     BackgroundColor="Red"
                                     HorizontalOptions="Center"
                                     Pressed="StateButton_OnPressed"
                                     SemanticProperties.Description="This a description"
                                     SemanticProperties.Hint="And this is a hint"
                                     Stroke="#C49B33"
                                     StrokeThickness="4">
                <stateButton:StateButton.StrokeShape>
                    <RoundRectangle CornerRadius="10" />
                </stateButton:StateButton.StrokeShape>
                <stateButton:StateButton.Triggers>
                    <Trigger TargetType="stateButton:StateButton" Property="State" Value="Pressed">
                        <Setter Property="BackgroundColor" Value="LightGray" />
                    </Trigger>
                </stateButton:StateButton.Triggers>
                <Label Text="Test" TextColor="White">
                    <Label.Triggers>
                        <DataTrigger Binding="{Binding Source={RelativeSource AncestorType={x:Type stateButton:StateButton}}, Path=State}"
                                     TargetType="Label"
                                     Value="Pressed">
                            <Setter Property="TextColor" Value="Blue" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </stateButton:StateButton>

            <Label FontSize="Medium"
                   Text="Released"
                   TextColor="Black" />
            <stateButton:StateButton Padding="20,10"
                                     AutomationProperties.IsInAccessibleTree="True"
                                     AutomationProperties.Name="Test"
                                     BackgroundColor="Red"
                                     HorizontalOptions="Center"
                                     Released="StateButton_OnReleased"
                                     Stroke="#C49B33"
                                     StrokeThickness="4">
                <stateButton:StateButton.StrokeShape>
                    <RoundRectangle CornerRadius="10" />
                </stateButton:StateButton.StrokeShape>
                <stateButton:StateButton.Triggers>
                    <Trigger TargetType="stateButton:StateButton" Property="State" Value="Pressed">
                        <Setter Property="BackgroundColor" Value="LightGray" />
                    </Trigger>
                </stateButton:StateButton.Triggers>
                <Label Text="Test" TextColor="White">
                    <Label.Triggers>
                        <DataTrigger Binding="{Binding Source={RelativeSource AncestorType={x:Type stateButton:StateButton}}, Path=State}"
                                     TargetType="Label"
                                     Value="Pressed">
                            <Setter Property="TextColor" Value="Blue" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </stateButton:StateButton>

            <BoxView Margin="0,30"
                     BackgroundColor="LightGray"
                     HeightRequest="1"
                     HorizontalOptions="Fill" />
            <!-- Commands -->
            <Label FontSize="Large"
                   Text="Commands"
                   TextColor="Black" />
            <Label FontSize="Medium"
                   Text="Clicked"
                   TextColor="Black" />
            <stateButton:StateButton Padding="20,10"
                                     AutomationProperties.IsInAccessibleTree="True"
                                     AutomationProperties.Name="Test"
                                     BackgroundColor="Red"
                                     ClickedCommand="{Binding ClickedCommand}"
                                     HorizontalOptions="Center"
                                     Stroke="#C49B33"
                                     StrokeThickness="4">
                <stateButton:StateButton.StrokeShape>
                    <RoundRectangle CornerRadius="10" />
                </stateButton:StateButton.StrokeShape>
                <stateButton:StateButton.Triggers>
                    <Trigger TargetType="stateButton:StateButton" Property="State" Value="Pressed">
                        <Setter Property="BackgroundColor" Value="LightGray" />
                    </Trigger>
                </stateButton:StateButton.Triggers>
                <Label Text="Test" TextColor="White">
                    <Label.Triggers>
                        <DataTrigger Binding="{Binding Source={RelativeSource AncestorType={x:Type stateButton:StateButton}}, Path=State}"
                                     TargetType="Label"
                                     Value="Pressed">
                            <Setter Property="TextColor" Value="Blue" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </stateButton:StateButton>

            <Label FontSize="Medium"
                   Text="Pressed"
                   TextColor="Black" />
            <stateButton:StateButton Padding="20,10"
                                     AutomationProperties.IsInAccessibleTree="True"
                                     AutomationProperties.Name="Test"
                                     BackgroundColor="Red"
                                     HorizontalOptions="Center"
                                     PressedCommand="{Binding PressedCommand}"
                                     Stroke="#C49B33"
                                     StrokeThickness="4">
                <stateButton:StateButton.StrokeShape>
                    <RoundRectangle CornerRadius="10" />
                </stateButton:StateButton.StrokeShape>
                <stateButton:StateButton.Triggers>
                    <Trigger TargetType="stateButton:StateButton" Property="State" Value="Pressed">
                        <Setter Property="BackgroundColor" Value="LightGray" />
                    </Trigger>
                </stateButton:StateButton.Triggers>
                <Label Text="Test" TextColor="White">
                    <Label.Triggers>
                        <DataTrigger Binding="{Binding Source={RelativeSource AncestorType={x:Type stateButton:StateButton}}, Path=State}"
                                     TargetType="Label"
                                     Value="Pressed">
                            <Setter Property="TextColor" Value="Blue" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </stateButton:StateButton>

            <Label FontSize="Medium"
                   Text="Released"
                   TextColor="Black" />
            <stateButton:StateButton Padding="20,10"
                                     AutomationProperties.IsInAccessibleTree="True"
                                     AutomationProperties.Name="Test"
                                     BackgroundColor="Red"
                                     HorizontalOptions="Center"
                                     ReleasedCommand="{Binding ReleasedCommand}"
                                     Stroke="#C49B33"
                                     StrokeThickness="4">
                <stateButton:StateButton.StrokeShape>
                    <RoundRectangle CornerRadius="10" />
                </stateButton:StateButton.StrokeShape>
                <stateButton:StateButton.Triggers>
                    <Trigger TargetType="stateButton:StateButton" Property="State" Value="Pressed">
                        <Setter Property="BackgroundColor" Value="LightGray" />
                    </Trigger>
                </stateButton:StateButton.Triggers>
                <Label Text="Test" TextColor="White">
                    <Label.Triggers>
                        <DataTrigger Binding="{Binding Source={RelativeSource AncestorType={x:Type stateButton:StateButton}}, Path=State}"
                                     TargetType="Label"
                                     Value="Pressed">
                            <Setter Property="TextColor" Value="Blue" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </stateButton:StateButton>

            <BoxView Margin="0,30"
                     BackgroundColor="LightGray"
                     HeightRequest="1"
                     HorizontalOptions="Fill" />
            <!-- Complex -->
            <Label FontSize="Large"
                   Text="Complex"
                   TextColor="Black" />
            <stateButton:StateButton Clicked="Card_OnClicked"
                                     HorizontalOptions="Fill"
                                     Stroke="LightGray"
                                     StrokeThickness="2">
                <stateButton:StateButton.StrokeShape>
                    <RoundRectangle CornerRadius="10" />
                </stateButton:StateButton.StrokeShape>
                <stateButton:StateButton.Triggers>
                    <Trigger TargetType="stateButton:StateButton" Property="State" Value="Pressed">
                        <Setter Property="Stroke" Value="Gray" />
                    </Trigger>
                </stateButton:StateButton.Triggers>
                <stateButton:StateButton.Behaviors>
                    <!--<xct:AnimationBehavior EventName="Clicked">
                        <xct:AnimationBehavior.AnimationType>
                            <xct:ShakeAnimation />
                        </xct:AnimationBehavior.AnimationType>
                    </xct:AnimationBehavior>-->
                </stateButton:StateButton.Behaviors>
                <stateButton:StateButton.Content>
                    <StackLayout>
                        <Label Margin="20"
                               FontSize="26"
                               HorizontalOptions="Center"
                               Text="Test"
                               TextColor="Black">
                            <Label.Triggers>
                                <DataTrigger Binding="{Binding Source={RelativeSource AncestorType={x:Type stateButton:StateButton}}, Path=State}"
                                             TargetType="Label"
                                             Value="Pressed">
                                    <Setter Property="FontAttributes" Value="Bold" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <Image Source="https://instabug.com/blog/wp-content/uploads/2018/10/Oct_Articles_01_Xamarin.png" />
                        <Label x:Name="Description"
                               Margin="20,0"
                               AutomationProperties.IsInAccessibleTree="True"
                               FontSize="Default"
                               HorizontalOptions="Center"
                               LineBreakMode="TailTruncation"
                               MaxLines="3"
                               Text="I'm baby vape jean shorts hammock air plant gluten-free thundercats, DIY kale chips master cleanse kickstarter vinyl cronut iceland. Coloring book cold-pressed cray authentic seitan. Snackwave bicycle rights ramps hoodie shaman readymade. Kitsch venmo hella pug, chillwave squid four dollar toast hashtag."
                               TextColor="Black" />
                        <Label Margin="20,0,20,10"
                               AutomationProperties.IsInAccessibleTree="True"
                               HorizontalOptions="End"
                               HorizontalTextAlignment="End"
                               Text="See more..."
                               TextColor="Blue">
                            <Label.GestureRecognizers>
                                <TapGestureRecognizer Tapped="TapGestureRecognizer_OnTapped" />
                            </Label.GestureRecognizers>
                        </Label>
                        <Button Margin="20,0"
                                Clicked="Button_OnClicked"
                                Text="XF button" />
                        <stateButton:StateButton Margin="0,20,0,0"
                                                 Padding="20,20"
                                                 Clicked="NestButton_OnClicked"
                                                 HorizontalOptions="Fill">
                            <stateButton:StateButton.StrokeShape>
                                <RoundRectangle CornerRadius="0" />
                            </stateButton:StateButton.StrokeShape>
                            <stateButton:StateButton.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Offset="0.1" Color="#015b66" />
                                    <GradientStop Offset="1.0" Color="#259879" />
                                </LinearGradientBrush>
                            </stateButton:StateButton.Background>
                            <stateButton:StateButton.Triggers>
                                <Trigger TargetType="stateButton:StateButton" Property="State" Value="Pressed">
                                    <Setter Property="Background">
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Offset="0.1" Color="Red" />
                                            <GradientStop Offset="1.0" Color="Orange" />
                                        </LinearGradientBrush>
                                    </Setter>
                                </Trigger>
                            </stateButton:StateButton.Triggers>

                            <Label Text="Nested state button" TextColor="White" />
                        </stateButton:StateButton>
                    </StackLayout>
                </stateButton:StateButton.Content>
            </stateButton:StateButton>

            <BoxView Margin="0,30"
                     BackgroundColor="LightGray"
                     HeightRequest="1"
                     HorizontalOptions="Fill" />
            <!-- Experiment -->
            <Label FontSize="Large"
                   Text="Experiment"
                   TextColor="Black" />
            <stateButton:StateButton Padding="20,10" HorizontalOptions="Fill">
                <stateButton:StateButton.StrokeShape>
                    <RoundRectangle CornerRadius="10" />
                </stateButton:StateButton.StrokeShape>
                <stateButton:StateButton.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Offset="0.1" Color="#015b66" />
                        <GradientStop Offset="1.0" Color="#259879" />
                    </LinearGradientBrush>
                </stateButton:StateButton.Background>
                <stateButton:StateButton.Triggers>
                    <Trigger TargetType="stateButton:StateButton" Property="State" Value="Pressed">
                        <Setter Property="Background">
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Offset="0.1" Color="Red" />
                                <GradientStop Offset="1.0" Color="Orange" />
                            </LinearGradientBrush>
                        </Setter>
                    </Trigger>
                </stateButton:StateButton.Triggers>

                <Label Text="Test" TextColor="White" />
            </stateButton:StateButton>
        </StackLayout>
    </ScrollView>
</ContentPage>